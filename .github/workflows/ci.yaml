name: ci

on: [push, pull_request]

jobs:
  examples:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: False
      matrix:
        python-version:
          - "2.7"
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get install libpython2.7  # required by paup
          python -m pip install --upgrade pip
      - name: Install paup
        run: |
          temp_dir=$(mktemp -d)
          wget -P ${temp_dir} http://phylosolutions.com/paup-test/paup4a168_ubuntu64.gz
          gunzip ${temp_dir}/paup4a168_ubuntu64.gz
          chmod +x ${temp_dir}/paup4a168_ubuntu64
          sudo mv ${temp_dir}/paup4a168_ubuntu64 /usr/local/bin/paup
          echo "export DENDROPY_PAUP_EXECUTABLE_PATH=/usr/local/bin/paup" >> "${GITHUB_ENV}"
      - name: Run examples
        run: |
          cd docs/source/examples
          # only allow known failures
          # and enforce removal of working examples from known failures
          for f in *.py; do
            echo "${f}"
            if timeout 60 python "${f}" && ! grep -q "${f}" backlogged-fail-whitelist.txt; then
              :
            elif grep -q "${f}" backlogged-fail-whitelist.txt; then
              :
            else
              echo FAIL "${f}"
              exit 1
            fi
          done
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ./lint.sh
  tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: False
      matrix:
        python-version:
          - "2.7"
          - "3.5"
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get install libpython2.7  # required by paup
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install paup
        run: |
          temp_dir=$(mktemp -d)
          wget -P ${temp_dir} http://phylosolutions.com/paup-test/paup4a168_ubuntu64.gz
          gunzip ${temp_dir}/paup4a168_ubuntu64.gz
          chmod +x ${temp_dir}/paup4a168_ubuntu64
          sudo mv ${temp_dir}/paup4a168_ubuntu64 /usr/local/bin/paup
          echo "export DENDROPY_PAUP_EXECUTABLE_PATH=/usr/local/bin/paup" >> "${GITHUB_ENV}"
      - name: Test with setup.py
        run: |
          python setup.py test
  coverage:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.8
    - name: Install paup
      run: |
        sudo apt-get install libpython2.7  # required by paup
        temp_dir=$(mktemp -d)
        wget -P ${temp_dir} http://phylosolutions.com/paup-test/paup4a168_ubuntu64.gz
        gunzip ${temp_dir}/paup4a168_ubuntu64.gz
        chmod +x ${temp_dir}/paup4a168_ubuntu64
        sudo mv ${temp_dir}/paup4a168_ubuntu64 /usr/local/bin/paup
        echo "export DENDROPY_PAUP_EXECUTABLE_PATH=/usr/local/bin/paup" >> "${GITHUB_ENV}"
    - name: Install coverage dependencies
      run: |
        python3 -m pip install pytest
        python3 -m pip install pytest-cov
    - name: Generate coverage report
      run: |
        python3 -m pytest tests --cov=tests/dendropy --cov-report=xml
    - uses: codecov/codecov-action@v3
      with:
        flags: unittests # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)
  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - examples
      - lint
      - tests
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - run: python setup.py sdist bdist_wheel
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
